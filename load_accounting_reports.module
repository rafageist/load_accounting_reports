<?php


/**
 * Implements hook_menu().
 */
function load_accounting_reports_menu(){
	$items = [];
	$items["loads/pdf"] = [
		'title' => t('Loads Totals'),
		'page callback' => 'load_accounting_reports_loads_totals_pdf',
		'page arguments' => [],
		'access callback' => 'user_access',
		'access arguments' => ['access loads totals'],
		'type' => MENU_NORMAL_ITEM
	];

	return $items;
}


/**
 * Implements hook_views_api().
 */
function load_accounting_reports_views_api(){
	return [
		'api' => '3.0',
	];
}

/**
 * Implements hook_views_pre_render().
 *
 * @param $view
 */
function load_accounting_reports_views_pre_render(&$view){
	if($view->name == 'load_totals'){
		drupal_add_css(drupal_get_path('module', 'load_accounting_reports') . "/css/load_accounting_reports.css");
		$view->pre_render_called = true;
	}
}


/**
 * Implements hook_views_post_render().
 */
function load_accounting_reports_views_post_render(&$view, &$output, &$cache){
	if($view->name == 'load_totals'){

		// post process summary
		$tag = '<tr class="summary">';
		$p = strpos($output, $tag);
		if($p !== false){
			// add Summary label
			$p1 = strpos($output, '<td></td>', $p);
			if($p1 !== false){
				$output = substr($output, 0, $p1) . '<td align="left">Summary</td>' . substr($output, $p1 + 9);
			}

			// number format each total
			while(true){
				$p1 = strpos($output, '<td>', $p);
				if($p1 === false) break;

				$p2 = strpos($output, '</td>', $p1);
				if($p2 === false) break;

				$value = substr($output, $p1 + 4, $p2 - $p1 - 4);
				$p3 = strpos($value, '</div>');
				if($p3 !== false) $value = substr($value, $p3 + 6);

				if(is_numeric($value)){
					$value = number_format(floatval($value), 2);
					$output = substr($output, 0, $p1 + 4) . $value . substr($output, $p2);
				}

				$p = $p1 + 1;
			}
		}

		// exclude unnecessary fields
		$exclude_columns = isset($_POST['exclude-columns']) && $_POST['exclude-columns'] == 'on';

		// insert tr inside head
		$tag = '<thead>';
		$p = strpos($output, $tag);
		$dispatch_span = $exclude_columns ? 1: 2;
		$bonus_span = $exclude_columns ? 2: 3;
		if($p !== false){
			$output = substr($output, 0, $p + strlen($tag)) . '<tr>' . str_repeat('<th></th>', 11) . '<th class ="border-left-white" colspan="'.$dispatch_span.'" align="center" valign="middle">Dispatch Service</th>' . '<th class ="border-left-white" colspan="'.$bonus_span.'" align="center" valign="middle">Bonus</th>' . '</tr>' . substr($output, $p + strlen($tag));

		}
	}
}

/**
 * Implements hook_views_default_views().
 */
function load_accounting_reports_views_default_views(){
	$path = './' . drupal_get_path('module', 'load_accounting_reports') . '/views/*.inc';
	$views = [];
	foreach(glob($path) as $views_filename){
		require_once($views_filename);
	}

	return $views;
}

/**
 * Generate PDF for Loads Totals
 *
 * @throws MpdfException
 */
function load_accounting_reports_loads_totals_pdf(){
	$path = './' . drupal_get_path('module', 'load_accounting_reports') . '/views/load_totals.inc';
	$view = new view();

	include $path;

	// exclude unnecessary fields
	$exclude_columns = isset($_POST['exclude-columns']) && $_POST['exclude-columns'] == 'on';

	if($exclude_columns){
		$columns_to_hide = ['dispatch-service-dispatcher', 'bonus-carrier'];
		foreach($view->display['default']->handler->display->display_options['fields'] as $k => $field){
			if(in_array($field['ui_name'], $columns_to_hide)){
				$view->display['default']->handler->display->display_options['fields'][$k]['exclude'] = true;
			}
		}
	}

	// render view
	$view->dom_id = uniqid();
	$output = $view->render('page');

	$p = strpos($output, '<table');
	$p2 = strpos($output, '</table');
	$output = substr($output, $p, $p2 - $p + 8);
	$output = str_replace(['BOL', 'Rate Confirmation', 'bol.pdf', 'confirmation.pdf', 'Total:'], '', $output);
	$output = str_replace('Average (excluding empty values):', '', $output);
	$output = str_replace(['<a ', '</a>'], ['<span ', '</span>'], $output);


	$head = '<html><head><title>4Globals - Reports - Loads</title>';
	$head .= '<style>' . file_get_contents(drupal_get_path('module', 'load_accounting_reports') . '/css/loads_totals_pdf.css') . '</style>';
	$head .= '</head><body>';

	$header = '<img src="sites/all/themes/load_subtheme/login.png" width="100"><br/><h2 align="right">Loads</h2>';

	$foot = '<p align="center" class="finger-print">4Global - Loads Report - ' . date("M/d/Y").'</p></body></html>';

	$output = $head . $header . $output . $foot;

	include "sites/all/libraries/mpdf/mpdf.php";

	$pdf = new mPDF('', 'A4', 10, '', 15, 15, 16, 16, 9, 9, 'L');
	$pdf->writeHTML($output);
	$pdf->output("4Global-Loads-" . date("Y-m-d-h-i-s") . ".pdf", "D");
}

/**
 * Implements hook_permission().
 */
function load_accounting_reports_permission(){
	return [
		'access loads totals report' => [
			'title' => t('Access to Loads Totals report'),
			'description' => t('Access to view Loads Totals report and PDF download'),
			'restrict access' => true,
		],
	];
}